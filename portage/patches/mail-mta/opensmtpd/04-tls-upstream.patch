--- smtpd/ssl.c 2015-06-30 08:13:34.000000000 +0000
+++ smtpd/ssl.c 2015-07-08 22:50:37.012666568 +0000
@@ -363,24 +363,33 @@
 ssl_to_text(const SSL *ssl)
 {
 	static char	buf[256];
 	static char	description[128];
 	char	       *tls_version = NULL;
 
+#if 0
 	/*
 	 * SSL_get_cipher_version() does not know about the exact TLS version...
 	 * you have to pick it up from second field of the SSL cipher description !
 	 */
 	SSL_CIPHER_description(SSL_get_current_cipher(ssl), description, sizeof description);
 	tls_version = strchr(description, ' ') + 1;
 	tls_version[strcspn(tls_version, " ")] = '\0';
 	(void)snprintf(buf, sizeof buf, "version=%s (%s), cipher=%s, bits=%d",
 	    SSL_get_cipher_version(ssl),
 	    tls_version,
 	    SSL_get_cipher_name(ssl),
 	    SSL_get_cipher_bits(ssl, NULL));
+#endif
+
+	/*
+	 * Let's use the proper function to get the protocol version eh?
+	 */
+	(void) snprintf(buf, sizeof buf, "protoversion=%s, ciphersuite=%s",
+	    SSL_get_version(ssl),
+	    SSL_get_cipher_name(ssl));
 
 	return (buf);
 }
 
 void
 ssl_error(const char *where)



--- smtpd/smtp_session.c 2015-06-30 08:13:34.000000000 +0000
+++ smtpd/smtp_session.c 2015-07-08 23:08:43.360664168 +0000
@@ -1271,10 +1271,9 @@
 	if (s->flags & SF_SECURE) {
 		x = SSL_get_peer_certificate(s->io.ssl);
 		iobuf_fqueue(&s->obuf,
-		    "\n\tTLS version=%s cipher=%s bits=%d verify=%s",
-		    SSL_get_cipher_version(s->io.ssl),
+		    "\n\tTLS protoversion=%s ciphersuite=%s verify=%s",
+		    SSL_get_version(s->io.ssl),
 		    SSL_get_cipher_name(s->io.ssl),
-		    SSL_get_cipher_bits(s->io.ssl, NULL),
 		    (s->flags & SF_VERIFIED) ? "YES" : (x ? "FAIL" : "NO"));
 		if (x)
 			X509_free(x);
